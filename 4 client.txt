#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <fcntl.h>
#include <unistd.h>

void error(const char *msg) {
    perror(msg);
    exit(1);
}

int main(int argc, char *argv[]) {
    int fd, sockfd, newsockfd, clilen, portno, n;
    struct sockaddr_in seradd, cliadd;
    char buffer[4096];

    if (argc < 2) {
        fprintf(stderr, "No port provided\n");
        exit(1);
    }

    portno = atoi(argv[1]);
    sockfd = socket(AF_INET, SOCK_STREAM, 0);
    if (sockfd < 0) 
        error("Error opening socket");

    memset((char *)&seradd, 0, sizeof(seradd));
    seradd.sin_family = AF_INET;
    seradd.sin_addr.s_addr = INADDR_ANY;
    seradd.sin_port = htons(portno);

    if (bind(sockfd, (struct sockaddr *)&seradd, sizeof(seradd)) < 0)
        error("Error on binding");

    listen(sockfd, 5);
    clilen = sizeof(cliadd);
    printf("Server waiting for client requests\n");

    while (1) {
        newsockfd = accept(sockfd, (struct sockaddr *)&cliadd, (socklen_t *)&clilen);
        if (newsockfd < 0) 
            error("Error on accept");

        memset(buffer, 0, 4096);
        n = read(newsockfd, buffer, 4096);
        if (n < 0) 
            error("Error reading from socket");

        fd = open(buffer, O_RDONLY);
        if (fd < 0) 
            error("File does not exist");

        while ((n = read(fd, buffer, 4096)) > 0) {
            if (write(newsockfd, buffer, n) < 0) 
                error("Error writing to socket");
        }

        if (n < 0) 
            error("Error reading the file");

        printf("File transfer complete\n");
        close(fd);
        close(newsockfd);
    }

    close(sockfd);
    return 0;
}
